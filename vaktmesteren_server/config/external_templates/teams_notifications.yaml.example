# Microsoft Teams Notifications Configuration
# This configuration defines how to send alerts to Microsoft Teams channels via webhooks

# Global settings
enabled: true
logOnly: false  # Set to true to simulate sending without actual webhook calls

# Rate limiting settings
rateLimitPerMinute: 10  # Maximum notifications per minute across all channels
cooldownMinutes: 5      # Minimum time between notifications for the same alert

# Webhook endpoints for different Teams channels
webhooks:
  # Main alerts channel
  alerts-channel:
    name: "Monitoring Alerts"
    url: "https://your-organization.webhook.office.com/webhookb2/your-webhook-url-here"
    enabled: true
    # Filter which alerts go to this channel
    severityFilter: ["CRITICAL", "WARNING"]  # Only CRITICAL and WARNING alerts
    hostFilter: []  # Empty = all hosts, or specify: ["ghrunner.grsoft.no", "web-server"]
    serviceFilter: []  # Empty = all services, or specify: ["CheckSystemd-Linux", "nginx"]
    
  # Critical alerts only channel
  critical-channel:
    name: "Critical Alerts Only"
    url: "https://your-organization.webhook.office.com/webhookb2/your-critical-webhook-url-here"
    enabled: true
    severityFilter: ["CRITICAL"]
    hostFilter: []
    serviceFilter: []
    
  # GitHub runner specific channel
  github-runners:
    name: "GitHub Runners Status"
    url: "https://your-organization.webhook.office.com/webhookb2/your-github-webhook-url-here"
    enabled: true
    severityFilter: ["CRITICAL", "WARNING", "RECOVERY"]
    hostFilter: ["ghrunner.grsoft.no"]
    serviceFilter: ["CheckSystemd-Linux"]

# Notification rules - define when to send notifications
notificationRules:
  # Rule 1: Critical alerts always notify
  - name: "Critical Alerts"
    enabled: true
    severities: ["CRITICAL"]
    channels: ["alerts-channel", "critical-channel"]
    # Send immediately on state change
    triggerOnStateChange: true
    # Don't send duplicates within cooldown period
    respectCooldown: true
    
  # Rule 2: Warning alerts for important services
  - name: "Important Service Warnings"
    enabled: true
    severities: ["WARNING"]
    channels: ["alerts-channel"]
    # Only for specific services
    servicePatterns: ["CheckSystemd-Linux", "nginx", "mysql"]
    triggerOnStateChange: true
    respectCooldown: true
    
  # Rule 3: Recovery notifications
  - name: "Recovery Notifications"
    enabled: true
    severities: ["RECOVERY"]
    channels: ["alerts-channel"]
    # Only send recovery for previously critical/warning alerts
    requiresPreviousAlert: true
    triggerOnStateChange: true
    respectCooldown: false  # Always send recovery notifications
    
  # Rule 4: GitHub runner specific notifications
  - name: "GitHub Runner Alerts"
    enabled: true
    severities: ["CRITICAL", "WARNING", "RECOVERY"]
    channels: ["github-runners"]
    hostPatterns: ["ghrunner.grsoft.no"]
    servicePatterns: ["CheckSystemd-Linux"]
    triggerOnStateChange: true
    respectCooldown: true

# Message formatting templates
messageTemplates:
  # Template for critical alerts
  critical:
    title: "üö® CRITICAL ALERT"
    color: "FF0000"  # Red
    includeFields:
      - "host"
      - "service"
      - "message"
      - "timestamp"
      - "duration"
    customMessage: "Immediate attention required!"
    
  # Template for warning alerts  
  warning:
    title: "‚ö†Ô∏è WARNING ALERT"
    color: "FFA500"  # Orange
    includeFields:
      - "host"
      - "service"
      - "message"
      - "timestamp"
    customMessage: "Please investigate when possible."
    
  # Template for recovery notifications
  recovery:
    title: "‚úÖ SERVICE RECOVERED"
    color: "00FF00"  # Green
    includeFields:
      - "host"
      - "service"
      - "timestamp"
      - "duration"
    customMessage: "Service has returned to normal operation."

# Advanced settings
advanced:
  # Retry settings for failed webhook calls
  retryAttempts: 3
  retryDelaySeconds: 5
  retryBackoffMultiplier: 2  # 5s, 10s, 20s delays
  
  # Timeout settings
  webhookTimeoutSeconds: 30
  
  # Message formatting options
  useAdaptiveCards: true  # Use rich formatting (recommended)
  includePlatformInfo: true  # Include server/platform details
  includeAlertHistory: false  # Include recent alert history in message
  
  # Webhook validation
  validateWebhookUrls: true  # Validate webhook URLs on startup
  
  # Debugging
  logWebhookPayloads: false  # Log full webhook payloads (for debugging)